apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "com.andrewm.weatherornot"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "0.0.1"
        setProperty("archivesBaseName", "WeatherOrNot-v$versionName-b$versionCode")
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    flavorDimensions "datatier"
    productFlavors {
        devBackend {
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "WeatherOrNot Dev"
            buildConfigField "String", "BASE_FORECAST_URL", "\"https://api.darksky.net/\""
            dimension "datatier"
        }
        productionBackend {
            resValue "string", "app_name", "WeatherOrNot"
            buildConfigField "String", "BASE_FORECAST_URL", "\"https://api.darksky.net/\""
            dimension "datatier"
        }
    }
    dataBinding {
        enabled = true
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

def dependencyGroup(Closure closure) {
    closure.delegate = dependencies
    return closure
}

def local = dependencyGroup {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

def ui = dependencyGroup {
    implementation "com.android.support:support-fragment:$supportLibVersion"
    implementation "com.android.support:support-core-ui:$supportLibVersion"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"

    kapt "com.android.databinding:compiler:$gradlePluginVersion"
}

def util = dependencyGroup {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
}

def test = dependencyGroup {
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
    testImplementation "com.google.code.findbugs:jsr305:3.0.2"

    androidTestImplementation "com.android.support:support-annotations:$supportLibVersion"
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.1'
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:3.0.1') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestImplementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
    androidTestImplementation "com.google.code.findbugs:jsr305:3.0.2"
}

def realm = dependencyGroup {
    kapt "io.realm:realm-annotations-processor:$realmVersion"
    kapt "io.realm:realm-annotations:$realmVersion"
}

def di = dependencyGroup {
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
}

def rx = dependencyGroup {
    implementation 'io.reactivex.rxjava2:rxjava:2.1.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
}

def network = dependencyGroup {
    implementation 'com.google.code.gson:gson:2.8.2'

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    local()
    ui()
    util()
    test()
    realm()
    di()
    rx()
    network()
}
